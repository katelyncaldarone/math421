# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
df <- read_csv('adult_census.csv')
df <- drop_na(df, age)
df <- drop_na(df, sex)
df$income = factor(df$income)
census_sex <- unique(df$sex)
selectInput(inputId = "sex_input",
label = h2("Select Gender"),
choices = census_sex,
selected = 'female')
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
p1
renderPlotly({
p2 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=race, fill=income))+
geom_bar()
ggplotly(p2)
})
p2
ggplotly(p2)
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
df <- read_csv('adult_census.csv')
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
df <- read_csv('adult_census.csv')
setwd('C:\\Users\\student\\OneDrive - Bryant University\\2023-2024\\Semester 1\\MATH421-A Statistical Analysis with R\\math421')
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
df <- read_csv('adult_census.csv')
df <- drop_na(df, age)
df <- drop_na(df, sex)
df$income = factor(df$income)
census_sex <- unique(df$sex)
selectInput(inputId = "sex_input",
label = h2("Select Gender"),
choices = census_sex,
selected = 'female')
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
renderPlotly({
p2 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=race, fill=income))+
geom_bar()
ggplotly(p2)
})
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
p1
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
df <- read_csv('adult_census.csv')
df <- drop_na(df, age)
df <- drop_na(df, sex)
df$income = factor(df$income)
census_sex <- unique(df$sex)
selectInput(inputId = "sex_input",
label = h2("Select Gender"),
choices = census_sex,
selected = 'female')
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
renderPlotly({
+   p1 <- df %>%
+     filter(Sex==input$sex_input) %>%
+     ggplot(aes(x=age, color=income))+
+     geom_density()
+   ggplotly(p1)
+ })
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
}
p1
renderPlotly(
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density(),
ggplotly(p1))
renderPlotly(
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density(),
ggplotly(p1))
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
p1
renderPlotly({
p1 <- df %>%
filter(Sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
p1
renderPlotly({
p1 <- df %>%
filter(sex==input$sex_input) %>%
ggplot(aes(x=age, color=income))+
geom_density()
ggplotly(p1)
})
p1
