library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(DT)
df <- read_csv('adult_census.csv')
# Create a ggplot object
p <- df %>%
mutate(sex = factor(sex)) %>%
ggplot()+
geom_bar(mapping=aes(x=income, fill=sex),
position = 'fill')+
labs(y='Proportion', fill='Sex')
p1 <- df %>%
mutate(sex = factor(sex)) %>%
ggplot()+
geom_density(mapping=aes(x=age, color=sex))+
facet_wrap(~education)
df
datatable(df, options = list(
pageLength = 5
))
table(df$workclass)
table(df$income)
df$workclass
table(df$workclass)
install.packages('shiny')
install.packages('packrat')
install.packages('rsconnect')
install.packages("rsconnect")
install.packages('shiny')
install.packages('packrat')
install.packages('rsconnect')
library(rsconnect)
library(shiny)
library(packrat)
rsconnect::setAccountInfo(name='katelyncaldarone', token='618CCC36A0A0CC957B3548A60FC07B9A', secret='nsQNf9J6QZMa1I0J55Nekk7EnbrVz7mwurdqWxoK')
---
title: "Titanic - SelectInput"
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
# Load data
df <- read_csv('adult_census.csv')
# Handling NAs
df <- drop_na(df, age)
df <- drop_na(df, sex)
# Convert income to factor
df$income = factor(df$income)
# Unique gender values
census_sex <- unique(df$sex)
---
```{r global, include=FALSE}
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
# Load data
df <- read_csv('adult_census.csv')
# Handling NAs
df <- drop_na(df, age)
df <- drop_na(df, sex)
# Convert income to factor
df$income = factor(df$income)
# Unique gender values
census_sex <- unique(df$sex)
selectInput(inputId = "sex_input",
label = h2("Select Gender"),
choices = census_sex,
selected = 'female')
renderPlotly({
p1 <- df %>%
filter(sex == input$sex_input) %>%
ggplot(aes(x = age, color = income)) +
geom_density() +
labs(title = paste("Density Plot for", input$sex_input),
x = "Age",
y = "Density")
ggplotly(p1)
})
Column {data-width=500}
renderPlotly({
p1 <- df %>%
filter(sex == input$sex_input) %>%
ggplot(aes(x = age, color = income)) +
geom_density() +
labs(title = paste("Density Plot for", input$sex_input),
x = "Age",
y = "Density")
ggplotly(p1)
})
Column {data-width=500}
renderPlotly({
p1 <- df %>%
filter(sex == input$sex_input) %>%
ggplot(aes(x = age, color = income)) +
geom_density() +
labs(title = paste("Density Plot for", input$sex_input),
x = "Age",
y = "Density")
ggplotly(p1)
})
Column {data-width=500}
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(shiny)
library(DT)
df <- read_csv('adult_census.csv')
df <- drop_na(df, age)
df <- drop_na(df, sex)
df$income = factor(df$income)
census_sex <- unique(df$sex)
selectInput(inputId = "sex_input",
label = h2("Select Gender"),
choices = census_sex,
selected = 'female')
Column {data-width=500}
-----------------------------------------------------------------------
### Bar Plot
```{r}
renderPlotly({
p2 <- df %>%
filter(sex == input$sex_input) %>%
ggplot(aes(x = race, fill = income)) +
geom_bar() +
labs(title = paste("Bar Plot for", input$sex_input),
x = "Race",
y = "Count")
ggplotly(p2)
})
df$workclass
table(df$education)
table(df$race)
df$relationship
df$hours.per.week
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(DT)
library(shiny)
df <- read_csv('hotel_booking.csv')
df <- drop_na(df, lead_time)
df <- drop_na(df, reservation_status_date)
df$hotel = factor(df$hotel)
df$market_segment = factor(df$market_segment)
df$deposit_type = factor(df$deposit_type)
hotel_type <- unique(df$hotel)
selectInput(inputId = "hotel_input",
label = h3("Select Hotel Type"),
choices = hotel_type,
selected = 'Resort Hotel')
checkboxGroupInput(inputId = "market_segment_input",
label = h3("Market Segment"),
choices = unique(df$market_segment),
inline = TRUE,
selected = 'Aviation')
sliderInput(inputId = "hrsPerWk_input",
label = h2("Select Lead Time Before Stay Input"),
min = min(df$lead_time, na.rm=TRUE),
max = max(df$lead_time, na.rm=TRUE),
value= c(50, 70))
radioButtons(inputId = "deposit_input",
label = h2("Select Deposit Type Input"),
choices = c('No Deposit', 'No Refund', 'Refundable'),
inline = TRUE,
selected = 'No Deposit')
dateRangeInput(inputId = "date_input",
label = h2("Date Range"),
start = min(df$reservation_status_date),
end = max(df$reservation_status_date),
min = min(df$reservation_status_date),
max = max(df$reservation_status_date))
df
kable(df)
install.packages('gt')
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(DT)
library(gt)
library(shiny)
df <- read_csv('hotel_booking.csv')
setwd("C:/Users/student/OneDrive - Bryant University/2023-2024/Semester 1/MATH421-A Statistical Analysis with R/math421")
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(DT)
library(gt)
library(shiny)
df <- read_csv('hotel_booking.csv')
df <- drop_na(df, lead_time)
df <- drop_na(df, reservation_status_date)
df$hotel = factor(df$hotel)
df$market_segment = factor(df$market_segment)
df$deposit_type = factor(df$deposit_type)
hotel_type <- unique(df$hotel)
head(df)
df %>%
gt()
install.packages('DT')
install.packages("DT")
datatable(
data = df,
caption = Table,
filter = top
)
datatable(
data = df,
caption = Table,
filter = top
)
install.packages("flextable")
flextable(df)
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(flexdashboard)
library(tidyverse)
library(plotly)
library(knitr)
library(DT)
library(flextable)
library(shiny)
df <- read_csv('hotel_booking.csv')
df <- drop_na(df, lead_time)
df <- drop_na(df, reservation_status_date)
df$hotel = factor(df$hotel)
df$market_segment = factor(df$market_segment)
df$deposit_type = factor(df$deposit_type)
hotel_type <- unique(df$hotel)
flextable(df)
head(df)
df
df
kable(head(df))
